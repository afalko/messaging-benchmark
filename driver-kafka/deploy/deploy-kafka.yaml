#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#


- name: Format and mount disks
  hosts: kafka
  connection: ssh
  become: true
  tasks:
    - shell: >
        mkfs.xfs /dev/nvme0n1 &&
        mkdir -p /mnt/data &&
        mount -o defaults,noatime /dev/nvme0n1 /mnt/data
      args:
        creates: /mnt/data

- name: Kafka setup
  hosts: all
  connection: ssh
  become: true
  tasks:
    - name: Install RPM packages
      yum: pkg={{ item }} state=latest
      with_items:
          - wget
          - java
          - sysstat
          - vim

    - set_fact:
        zookeeperServers: "{{ groups['zookeeper']|map('extract', hostvars, ['ansible_default_ipv4', 'address'])|map('regex_replace', '(.*)', '\\1:2181') | join(',') }}"
        boostrapServers: "{{ hostvars[groups['kafka'][0]].private_ip }}:9092"

    - name: Download Kafka
      file:
        path: "/opt/kafka"
        state: directory
    - get_url:
        url: http://mirrors.ocf.berkeley.edu/apache/kafka/1.0.0/kafka_2.12-1.0.0.tgz
        dest: /tmp/kafka.tgz
    - command: tar --strip-components=1 -xvf /tmp/kafka.tgz
      args:
        chdir: /opt/kafka

    - set_fact:
        privateIp: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

- name: Setup ZooKeeper
  hosts: zookeeper
  connection: ssh
  become: true
  tasks:
    - set_fact:
        zid: "{{ groups['zookeeper'].index(inventory_hostname) }}"
    - file:
        path: "/opt/kafka/data/zookeeper"
        state: directory
    - template:
        src: "templates/zookeeper.properties"
        dest: "/opt/kafka/config/zookeeper.properties"
    - template:
        src: templates/myid
        dest: "/opt/kafka/data/zookeeper/myid"
    - template:
        src: "templates/zookeeper.service"
        dest: "/etc/systemd/system/zookeeper.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "zookeeper"


- name: Setup Kafka
  hosts: kafka
  connection: ssh
  become: true
  tasks:
    - set_fact:
        brokerId: "{{ groups['kafka'].index(inventory_hostname) }}"
    - name: Set up broker
      template:
        src: "templates/server.properties"
        dest: "/opt/kafka/config/server.properties"
    - template:
        src: "templates/kafka.service"
        dest: "/etc/systemd/system/kafka.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "kafka"

- name: Setup Benchmark client
  hosts: client
  connection: ssh
  become: true
  tasks:
    - name: Copy benchmark code
      unarchive:
        src: ../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - name: Configure URL
      lineinfile:
         dest: /opt/openmessaging-benchmark-0.0.1-SNAPSHOT/driver-kafka/kafka.yaml
         regexp: '^    bootstrap.servers='
         line: '    bootstrap.servers={{ boostrapServers }}'
    - name: Configure http URL
      lineinfile:
         dest: /opt/openmessaging-benchmark-0.0.1-SNAPSHOT/bin/benchmark
         regexp: '^JVM_MEM='
         line: 'JVM_MEM="-Xms48G -Xmx48G -XX:+UseShenandoahGC "'


- name:  Hosts addresses
  hosts: localhost
  tasks:
    - debug:
        msg: "Zookeeper servers  {{ item }}"
      with_items: "{{ groups['zookeeper'] }}"
    - debug:
        msg: "Kafka brokers {{ item }}"
      with_items: "{{ groups['kafka'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['client'] }}"
